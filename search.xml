<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[选择数组中最佳组合算法]]></title>
    <url>%2F2017%2F09%2F22%2Fn-choose-k%2F</url>
    <content type="text"><![CDATA[问题有 N 个等高不等长的长方形，排列成 2 行。求 2 行长度差值最小的情况下长那行的长度。例如 {2，2，3}，结果为 4。 答案计算出全部符合条件的组合数，再找出最大的组合数。 12345678910111213141516171819202122public class NChooseK &#123; private static long findOptimum(List&lt;Integer&gt; numbers, long maxSum) &#123; Set&lt;Integer&gt; sums = new HashSet&lt;&gt;(Collections.singletonList(0)); numbers.forEach(number -&gt; &#123; Set&lt;Integer&gt; subSums = sums.stream().map(sum -&gt; sum + number) .filter(newSum -&gt; newSum &lt;= maxSum).collect(toSet()); sums.addAll(subSums); &#125;); return sums.stream().mapToLong(i -&gt; i).max().orElse(0); &#125; public static void main(String[] args) &#123; List&lt;Integer&gt; numbers = Arrays.asList(3, 7, 7, 5, 4); long sum = numbers.stream().mapToLong(i -&gt; i).sum(); long mid = sum / 2; long optimum = findOptimum(numbers, mid); long answer = sum - optimum; System.out.println("Answer is " + answer); &#125;&#125;]]></content>
      <tags>
        <tag>algorithm</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Postman 离线安装指南]]></title>
    <url>%2F2017%2F09%2F07%2Fpostman-installation-guide%2F</url>
    <content type="text"><![CDATA[下载访问 https://www.crx4chrome.com/crx/1058 ，点击「Crx4Chrome」下载 Postman 离线安装包。 解压 修改离线安装包扩展名 .ctx 为 .zip。 解压到 C:\Chrome\postman （可更改为任意目录）。 重命名 _metadata 文件夹为 metadata。 安装 浏览器地址栏输入 chrome://extensions 打开扩展管理页面。 勾选页面右上角的「开发者模式」选项。 点击「加载已解压的扩展程序」，选择 C:\Chrome\postman 并确定。 使用 浏览器地址栏输入 chrome://apps 打开应用页面。 点击 Postman 应用。 如果弹出注册页面，点击页面最底部「Take me straight to the app …」。]]></content>
      <tags>
        <tag>guide</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux 删除除指定文件外的其他文件]]></title>
    <url>%2F2017%2F08%2F29%2Fremove-all-but-except-some-files%2F</url>
    <content type="text"><![CDATA[Find12345# 排除单个文件find . ! -name 'exec.js' -delete# 排除多个文件find . ! -name 'exec.js' -a ! -name '.git' Bash1234567shopt -s extglob# 排除单个文件rm -- !exec.js# 排除多个文件rm -- !(exec.js|.git) Zsh1234567setopt extended_glob# 排除单个文件rm -- ^exec.js# 排除多个文件rm -- ^(exec.js|.git)]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[重置 OmniFocus 数据库]]></title>
    <url>%2F2017%2F08%2F17%2Freset-omnifocus-database%2F</url>
    <content type="text"><![CDATA[步骤 右键 OmniFocus 窗口标题栏中的文档图标。 点击下拉列表中的 OmniFocus 文件夹，在 Finder 中打开它。 退出 OmniFocus。 将 OmniFocus.ofocus 移动到其他位置（如果您想保留）或删除。 运行 OmniFocus。将显示首次启动经验的欢迎页面。 选择「只能在此处保存数据（仅在此 Mac 上储存 OmniFocus 数据）」，然后创建一个全新的数据库。 取消「将教学课程项目添加到数据库」选项，然后点击紫色按钮结束。 如果以前没有设置数据库同步，则到此结束。 通过「菜单栏 ▸ OmniFocus ▸ 偏好设置 ▸ 同步」来设置同步。 选择您的同步方式，输入账户信息，然后关闭配置窗口（不要按「同步」按钮）。如果收到同步提示替换数据库并开始同步，请点击取消。 选择「文件 ▸ 更换服务器数据库」以将新的空白数据库上传到服务器。 在其他设备上，同步并从提示中选择「保留同步数据库」选项，从服务器下载新的空白数据库。 原文How to reset the OmniFocus database]]></content>
      <tags>
        <tag>omnifocus</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx 日志转储]]></title>
    <url>%2F2017%2F06%2F06%2Fnginx-log-rotation%2F</url>
    <content type="text"><![CDATA[前言Nginx 自身并没有日志转储功能，需要由其他程序来完成。这符合 Unix 哲学，专注于一件事并将其做好。 Logrotate 是日志文件管理工具，提供自动转储压缩，删除和邮寄日志文件。 Logrotate 可以设置为每天，每周，每月或当日志文件达到一定大小时处理日志文件。 配置 Logrotate创建 /etc/logrotate.d/nginx，内容如下 123456789/usr/local/nginx/logs/*.log &#123; daily rotate 30 notifempty sharedscripts postrotate kill -USR1 `cat /usr/local/nginx/logs/nginx.pid` endscript&#125; 第一行：转储目录 /usr/local/nginx/logs 下全部 .log 后缀的日志文件。第二行：每天执行。第三行：最多保留 30 份日志。第四行：如果日志为空则不执行。第五行：只执行一次 postrotate 脚本。第六行：开始 postrotate 脚本声明。postrotate 脚本在转储文件后（压缩文件前）马上执行。第七行：通知 Nginx 重新打开日志文件。第八行：结束 postrotate 脚本声明。 测试 Logrotate执行 logrotate -d /etc/logrotate.d/nginx 测试配置是否正确。 常见问题处理日志转储没有执行根据以下步骤定位问题： 执行 logrotate -d /etc/logrotate.d/nginx 测试配置是否正确。 检查 /var/log/cron 日志 logrotate 是否有执行。 检查 cron 守护进程是否正在运行。]]></content>
      <tags>
        <tag>nginx</tag>
        <tag>logrotate</tag>
        <tag>linux</tag>
      </tags>
  </entry>
</search>
